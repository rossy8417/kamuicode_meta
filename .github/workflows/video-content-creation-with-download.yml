name: "Video Content Creation with Auto Download"
run-name: "🎥 Auto Download: ${{ github.event.inputs.video_concept }}"

on:
  workflow_dispatch:
    inputs:
      video_concept:
        description: '動画コンセプト・テーマ'
        required: true
        default: 'AIとロボットが協力する未来都市'
        type: string

permissions:
  contents: write
  actions: read

jobs:
  # Phase 1: 画像生成とダウンロード
  generate-and-download:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Generate test image
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            Generate an image using t2i-google-imagen3 service.
            Prompt: "${{ github.event.inputs.video_concept }}"
            Aspect ratio: 1:1
            Save result to generated/test-result.json
          system_prompt: |
            You are Claude Code in CI/CD. All MCP tools are pre-authorized.
          mcp_config: ".claude/mcp-kamuicode.json"
          allowed_tools: "mcp__t2i-google-imagen3__*,Write"
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
      - name: Upload generation results
        uses: actions/upload-artifact@v4
        with:
          name: generation-results-${{ github.run_number }}
          path: generated/
          retention-days: 7
          
  # Phase 2: アーティファクトからダウンロード
  download-from-artifacts:
    needs: generate-and-download
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download generation artifacts
        uses: actions/download-artifact@v4
        with:
          name: generation-results-${{ github.run_number }}
          path: downloaded-artifacts/
          
      - name: Process downloaded files
        run: |
          echo "📦 Processing downloaded artifacts..."
          
          # アーティファクトの内容を確認
          echo "Files in artifacts:"
          find downloaded-artifacts -type f -name "*" | while read file; do
            echo "  - $file"
          done
          
          # JSONから画像URLを抽出してダウンロード
          if [ -f "downloaded-artifacts/test-result.json" ]; then
            echo ""
            echo "📄 Reading generation result..."
            cat downloaded-artifacts/test-result.json
            
            # URLを抽出（Google Cloud StorageのフルURL）
            IMAGE_URL=$(jq -r '.download_url // .image_url // .url // empty' downloaded-artifacts/test-result.json)
            
            if [ -n "$IMAGE_URL" ]; then
              echo ""
              echo "🔗 Found image URL: $IMAGE_URL"
              echo ""
              echo "📥 Downloading image from URL..."
              
              # フルURLでダウンロード（省略しない）
              wget -O "downloaded-image.png" "$IMAGE_URL" || echo "Download failed"
              
              if [ -f "downloaded-image.png" ]; then
                echo "✅ Image downloaded successfully"
                echo "Path: $(pwd)/downloaded-image.png"
                echo "Size: $(ls -lh downloaded-image.png | awk '{print $5}')"
              fi
            else
              echo "❌ No image URL found in result"
            fi
          fi
          
      - name: Create download summary
        run: |
          # ダウンロード結果をまとめる
          cat > download-summary.json << EOF
          {
            "workflow_run": ${{ github.run_number }},
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "artifacts_downloaded": true,
            "files": [
          EOF
          
          # ダウンロードしたファイルをリスト
          first=true
          find . -name "*.png" -o -name "*.jpg" | while read file; do
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> download-summary.json
            fi
            echo -n "      \"$file\"" >> download-summary.json
          done
          
          echo "" >> download-summary.json
          echo "    ]" >> download-summary.json
          echo "  }" >> download-summary.json
          
          echo "📊 Download summary:"
          cat download-summary.json
          
      - name: Upload downloaded files
        uses: actions/upload-artifact@v4
        with:
          name: final-downloads-${{ github.run_number }}
          path: |
            downloaded-image.png
            download-summary.json
          retention-days: 30
          
  # Phase 3: 一括処理版
  bulk-download:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Generate multiple images and auto-download
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            1. Generate 3 images using t2i-google-imagen3:
               - Scene 1: "Futuristic city skyline at dawn"
               - Scene 2: "AI robots working together"
               - Scene 3: "Human-AI collaboration"
            2. For each generated image:
               - Get the FULL authenticated URL (don't abbreviate)
               - Download using wget to current directory
               - Name files as scene1.png, scene2.png, scene3.png
            3. Create all-results.json with:
               - All generation details
               - Full URLs (no abbreviation)
               - Local file paths
               - File sizes after download
            4. List all downloaded files with full paths
          system_prompt: |
            You are Claude Code in CI/CD. All MCP tools are pre-authorized.
            CRITICAL: Always use FULL URLs for downloads, never abbreviate.
          mcp_config: ".claude/mcp-kamuicode.json"
          allowed_tools: "mcp__t2i-google-imagen3__*,Bash,Write"
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          max_turns: "15"
          
      - name: Verify downloads
        run: |
          echo "🔍 Verifying downloaded files..."
          echo ""
          
          # 現在のディレクトリの画像ファイルを確認
          echo "Downloaded images:"
          ls -la *.png 2>/dev/null || echo "No PNG files found"
          
          echo ""
          echo "All files in current directory:"
          ls -la
          
          # 結果JSONを表示
          if [ -f "all-results.json" ]; then
            echo ""
            echo "📄 Generation results:"
            cat all-results.json | jq '.' || cat all-results.json
          fi
          
      - name: Create final package
        run: |
          # 最終パッケージを作成
          mkdir -p final-package
          
          # すべての画像をコピー
          cp *.png final-package/ 2>/dev/null || true
          cp *.json final-package/ 2>/dev/null || true
          
          # パッケージ情報を作成
          cat > final-package/package-info.json << EOF
          {
            "created_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow_run": ${{ github.run_number }},
            "concept": "${{ github.event.inputs.video_concept }}",
            "files_included": $(ls final-package/*.png 2>/dev/null | wc -l),
            "total_size": "$(du -sh final-package | cut -f1)"
          }
          EOF
          
          echo "📦 Final package created:"
          ls -la final-package/
          
      - name: Upload final package
        uses: actions/upload-artifact@v4
        with:
          name: complete-package-${{ github.run_number }}
          path: |
            final-package/
            scene*.png
            all-results.json
          retention-days: 90
          
      - name: Create workflow summary
        run: |
          echo "## 🎉 Video Content Creation with Downloads Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Results:" >> $GITHUB_STEP_SUMMARY
          echo "- **Concept**: ${{ github.event.inputs.video_concept }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts**: complete-package-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Downloaded Files:" >> $GITHUB_STEP_SUMMARY
          ls -la *.png 2>/dev/null | while read line; do
            echo "- $line" >> $GITHUB_STEP_SUMMARY
          done || echo "- No files downloaded" >> $GITHUB_STEP_SUMMARY