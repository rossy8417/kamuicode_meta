name: "Video Content Creation Direct MCP"
run-name: "🎥 Direct MCP: ${{ github.event.inputs.video_concept }}"

on:
  workflow_dispatch:
    inputs:
      video_concept:
        description: '動画コンセプト・テーマ'
        required: true
        default: 'Direct MCP test - AIとロボットの協力'
        type: string

permissions:
  contents: write
  actions: read

env:
  MCP_BASE_URL: "https://mcp-creatify-lipsync-20250719-010824-a071b7b8-820994673238.us-central1.run.app"

jobs:
  test-direct-mcp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install requests
          
      - name: Test Direct MCP Call - Text to Image
        run: |
          echo "🎨 Testing direct MCP call to t2i-google-imagen3..."
          
          mkdir -p test-results
          
          # Create Python script for MCP call
          cat > test_mcp.py << 'EOF'
          import requests
          import json
          import sys
          
          # MCP service URL
          url = "${{ env.MCP_BASE_URL }}/t2i/google/imagen"
          
          # Test prompt
          prompt = "A futuristic scene showing AI and robots collaborating, digital art style, high quality"
          
          # Prepare request
          headers = {
              "Content-Type": "application/json"
          }
          
          data = {
              "prompt": prompt,
              "aspect_ratio": "1:1"
          }
          
          print(f"Sending request to: {url}")
          print(f"Prompt: {prompt}")
          
          try:
              # Make request
              response = requests.post(url, json=data, headers=headers, timeout=30)
              
              print(f"Response status: {response.status_code}")
              print(f"Response headers: {dict(response.headers)}")
              
              if response.status_code == 200:
                  result = response.json()
                  print("Success! Response:")
                  print(json.dumps(result, indent=2))
                  
                  # Save result
                  with open("test-results/mcp-response.json", "w") as f:
                      json.dump(result, f, indent=2)
              else:
                  print(f"Error: {response.status_code}")
                  print(f"Response: {response.text}")
                  sys.exit(1)
                  
          except Exception as e:
              print(f"Exception occurred: {str(e)}")
              sys.exit(1)
          EOF
          
          # Run the test
          python test_mcp.py
          
      - name: Display Results
        if: always()
        run: |
          echo "📊 Test Results:"
          if [ -f test-results/mcp-response.json ]; then
            cat test-results/mcp-response.json
          else
            echo "No response file found"
          fi
          
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: direct-mcp-test-${{ github.run_number }}
          path: test-results/
          retention-days: 7