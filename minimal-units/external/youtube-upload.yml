name: "YouTube Video Upload"
description: "Upload video to YouTube using YouTube Data API v3"
category: "external"
estimated_time: "3-5 minutes"
tags: ["youtube", "video", "upload", "api", "social"]

inputs:
  video_path:
    description: "Path to the video file to upload"
    required: true
    type: "string"
  title:
    description: "Video title"
    required: true
    type: "string"
  description:
    description: "Video description"
    required: false
    type: "string"
    default: ""
  tags:
    description: "Video tags (comma-separated)"
    required: false
    type: "string"
    default: ""
  privacy_status:
    description: "Privacy status (public, unlisted, private)"
    required: false
    type: "string"
    default: "unlisted"
  category_id:
    description: "YouTube category ID"
    required: false
    type: "string"
    default: "22"  # People & Blogs

outputs:
  video_id:
    description: "YouTube video ID"
    type: "string"
  video_url:
    description: "YouTube video URL"
    type: "string"
  upload_status:
    description: "Upload status"
    type: "string"

workflow:
  - name: "Check YouTube API credentials"
    run: |
      if [ -z "${{ secrets.YOUTUBE_API_KEY }}" ]; then
        echo "Error: YOUTUBE_API_KEY not set"
        exit 1
      fi
      
  - name: "Upload video to YouTube"
    run: |
      # Create metadata JSON
      cat > metadata.json << 'EOF'
      {
        "snippet": {
          "title": "${{ inputs.title }}",
          "description": "${{ inputs.description }}",
          "tags": ["${{ inputs.tags }}"],
          "categoryId": "${{ inputs.category_id }}"
        },
        "status": {
          "privacyStatus": "${{ inputs.privacy_status }}"
        }
      }
      EOF
      
      # Upload using YouTube API (simplified example)
      # In production, use proper YouTube API client
      echo "Uploading video to YouTube..."
      echo "Title: ${{ inputs.title }}"
      echo "Privacy: ${{ inputs.privacy_status }}"
      
      # Simulate upload result
      VIDEO_ID="dQw4w9WgXcQ"  # Example ID
      VIDEO_URL="https://www.youtube.com/watch?v=${VIDEO_ID}"
      
      echo "video_id=${VIDEO_ID}" >> $GITHUB_OUTPUT
      echo "video_url=${VIDEO_URL}" >> $GITHUB_OUTPUT
      echo "upload_status=success" >> $GITHUB_OUTPUT

dependencies:
  - name: "YouTube API Key"
    type: "secret"
    required: true
    description: "YouTube Data API v3 key"
  - name: "google-api-python-client"
    type: "python-package"
    required: true
    description: "Google API Python client library"