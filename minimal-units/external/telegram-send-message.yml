name: "Telegram Send Message"
description: "Send message via Telegram Bot API"
category: "external"
estimated_time: "1 minute"
tags: ["telegram", "bot", "message", "api", "external", "notification"]

inputs:
  chat_id:
    description: "Chat ID or @username"
    required: true
    type: "string"
  text:
    description: "Message text"
    required: true
    type: "string"
  parse_mode:
    description: "Parse mode (Markdown, MarkdownV2, HTML)"
    required: false
    type: "string"
    default: "Markdown"
  disable_notification:
    description: "Send silently"
    required: false
    type: "boolean"
    default: false
  reply_to_message_id:
    description: "ID of message to reply to"
    required: false
    type: "integer"
    default: 0
  disable_web_page_preview:
    description: "Disable link previews"
    required: false
    type: "boolean"
    default: false

outputs:
  message_id:
    description: "Sent message ID"
    type: "integer"
  chat_id:
    description: "Chat ID where message was sent"
    type: "string"
  date:
    description: "Message timestamp"
    type: "integer"

workflow:
  - name: "Check Telegram bot token"
    run: |
      if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
        echo "Error: TELEGRAM_BOT_TOKEN not set"
        exit 1
      fi
      
  - name: "Send Telegram message"
    run: |
      # Prepare message payload
      cat > telegram_payload.json << 'EOF'
      {
        "chat_id": "${{ inputs.chat_id }}",
        "text": "${{ inputs.text }}",
        "parse_mode": "${{ inputs.parse_mode }}",
        "disable_notification": ${{ inputs.disable_notification }},
        "disable_web_page_preview": ${{ inputs.disable_web_page_preview }}
      }
      EOF
      
      # Add reply_to_message_id if provided
      if [ "${{ inputs.reply_to_message_id }}" -gt 0 ]; then
        jq '. + {"reply_to_message_id": ${{ inputs.reply_to_message_id }}}' telegram_payload.json > temp.json
        mv temp.json telegram_payload.json
      fi
      
      # Send message
      echo "Sending message to Telegram..."
      
      RESPONSE=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -d @telegram_payload.json \
        "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage")
      
      # Check response
      if [ "$(echo "$RESPONSE" | jq -r '.ok')" != "true" ]; then
        echo "Error: Telegram API request failed"
        echo "$RESPONSE" | jq .
        exit 1
      fi
      
      # Extract message information
      MESSAGE_ID=$(echo "$RESPONSE" | jq -r '.result.message_id')
      CHAT_ID=$(echo "$RESPONSE" | jq -r '.result.chat.id')
      DATE=$(echo "$RESPONSE" | jq -r '.result.date')
      
      echo "Message sent successfully"
      echo "message_id=${MESSAGE_ID}" >> $GITHUB_OUTPUT
      echo "chat_id=${CHAT_ID}" >> $GITHUB_OUTPUT
      echo "date=${DATE}" >> $GITHUB_OUTPUT

dependencies:
  - name: "Telegram Bot Token"
    type: "secret"
    required: true
    description: "Telegram Bot API token"