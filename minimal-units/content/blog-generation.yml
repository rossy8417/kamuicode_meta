name: blog-generation
description: ブログ記事生成の最小単位ユニット

on:
  workflow_call:
    inputs:
      topic:
        description: 'ブログトピック'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      word_count:
        description: '目標文字数'
        required: false
        type: string
        default: '1000'
      tone:
        description: 'トーン（professional/casual/technical）'
        required: false
        type: string
        default: 'professional'
      include_images:
        description: '画像を含めるか'
        required: false
        type: boolean
        default: true
    outputs:
      blog_path:
        description: 'ブログ記事パス'
        value: ${{ jobs.generate.outputs.blog_path }}
      title:
        description: '記事タイトル'
        value: ${{ jobs.generate.outputs.title }}
      summary:
        description: '記事サマリー'
        value: ${{ jobs.generate.outputs.summary }}
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN:
        description: 'Anthropic API Key'
        required: true

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      blog_path: ${{ steps.execute.outputs.blog_path }}
      title: ${{ steps.execute.outputs.title }}
      summary: ${{ steps.execute.outputs.summary }}
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Generate Blog Article
        id: execute
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # プロンプトの構築
          PROMPT="Write a comprehensive blog article about:

          Topic: ${{ inputs.topic }}
          Word Count: ${{ inputs.word_count }} words
          Tone: ${{ inputs.tone }}
          Include Images: ${{ inputs.include_images }}

          Tasks:
          1. Research and understand the topic
          2. Create an engaging title
          3. Write a well-structured article
          4. Include relevant sections and subheadings
          5. Add image placeholders if requested
          6. Save as Markdown to '${{ inputs.output_dir }}/blog_article.md'
          7. Save metadata to '${{ inputs.output_dir }}/blog_metadata.json'

          Article structure:
          - Compelling introduction
          - Clear main sections
          - Practical examples
          - Actionable insights
          - Strong conclusion

          Metadata format:
          {
            \"title\": \"Article title\",
            \"summary\": \"Brief summary\",
            \"tags\": [],
            \"word_count\": number,
            \"reading_time\": \"X min\",
            \"sections\": []
          }

          Ensure the article is:
          - SEO-friendly
          - Well-researched
          - Engaging and valuable
          - Properly formatted in Markdown"
          
          # Claude Code実行
          npx @anthropic-ai/claude-code \
            --allowedTools "Write" \
            --max-turns 15 \
            --permission-mode "acceptEdits" \
            -p "$PROMPT"
          
          # 結果確認
          if [ -f "${{ inputs.output_dir }}/blog_metadata.json" ]; then
            METADATA=$(cat "${{ inputs.output_dir }}/blog_metadata.json")
            TITLE=$(echo "$METADATA" | jq -r '.title // "Untitled"')
            SUMMARY=$(echo "$METADATA" | jq -r '.summary // "No summary"' | tr '\n' ' ')
            
            echo "blog_path=${{ inputs.output_dir }}/blog_article.md" >> $GITHUB_OUTPUT
            echo "title=$TITLE" >> $GITHUB_OUTPUT
            echo "summary=$SUMMARY" >> $GITHUB_OUTPUT
          else
            # フォールバック
            echo "blog_path=${{ inputs.output_dir }}/blog_article.md" >> $GITHUB_OUTPUT
            echo "title=Blog Generation Failed" >> $GITHUB_OUTPUT
            echo "summary=Failed to generate blog article" >> $GITHUB_OUTPUT
          fi