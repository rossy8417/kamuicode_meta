# ⚠️ 重要：これは参照テンプレートです。実際のワークフローではインライン実装してください
# 詳細は /minimal-units/USAGE_GUIDELINES.md を参照

name: t2i-imagen3
description: Google Imagen3テキストから画像生成の最小単位ユニット（MCP統合版）

on:
  workflow_call:
    inputs:
      prompt:
        description: '画像生成プロンプト'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      negative_prompt:
        description: 'ネガティブプロンプト'
        required: false
        type: string
        default: ''
      aspect_ratio:
        description: 'アスペクト比（1:1, 16:9, 9:16等）'
        required: false
        type: string
        default: '1:1'
      style_preset:
        description: 'スタイルプリセット'
        required: false
        type: string
        default: 'photorealistic'
    outputs:
      image_path:
        description: '生成された画像パス'
        value: ${{ jobs.generate.outputs.image_path }}
      image_url:
        description: '画像URL'
        value: ${{ jobs.generate.outputs.image_url }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      image_path: ${{ steps.generate.outputs.image_path }}
      image_url: ${{ steps.generate.outputs.image_url }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code
        run: |
          npm init -y
          npm install @anthropic-ai/claude-code
      
      - name: Generate Image
        id: generate
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          CLAUDE_CODE_CI_MODE: true
          CLAUDE_CODE_AUTO_APPROVE_MCP: true
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # Claude Code CLIでMCP経由で画像生成
          CLAUDE_PROMPT="Generate an image using t2i-google-imagen3 with the following requirements:
          
          **Prompt**: ${{ inputs.prompt }}
          **Aspect Ratio**: ${{ inputs.aspect_ratio }}
          **Number of Images**: 1
          **Auto Download**: true
          **Output Directory**: ${{ inputs.output_dir }}
          
          Steps:
          1. Use mcp__t2i-google-imagen3__imagen_t2i to generate the image
          2. The tool will automatically download the image to the output directory
          3. List the downloaded files and save the first image path to image-path.txt
          4. Save the image URL to image-url.txt
          
          Important: Make sure to pass auto_download=true and output_directory parameters to the MCP tool."
          
          npx @anthropic-ai/claude-code \
            -p "$CLAUDE_PROMPT" \
            --mcp-config ".claude/mcp-kamuicode.json" \
            --allowedTools "mcp__t2i-google-imagen3__imagen_t2i,Bash,Write" \
            --permission-mode "acceptEdits"
          
          # 結果確認とファイル名の柔軟な処理
          cd "${{ inputs.output_dir }}"
          
          # 画像ファイルを探す（PNGまたはJPG）
          IMAGE_FILE=""
          for ext in png jpg jpeg; do
            for file in *.$ext; do
              if [ -f "$file" ]; then
                IMAGE_FILE="$file"
                break 2
              fi
            done
          done
          
          # image.pngとして統一
          if [ -n "$IMAGE_FILE" ] && [ "$IMAGE_FILE" != "image.png" ]; then
            mv "$IMAGE_FILE" "image.png"
            echo "✅ Renamed $IMAGE_FILE to image.png"
          fi
          
          # URLファイルを確認
          if [ -f "image-url.txt" ]; then
            IMAGE_URL=$(cat image-url.txt)
          else
            IMAGE_URL="generated-image-url"
          fi
          
          # 最終確認
          if [ -f "image.png" ]; then
            echo "image_path=${{ inputs.output_dir }}/image.png" >> $GITHUB_OUTPUT
            echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT
            echo "✅ Image generation completed successfully"
          else
            echo "❌ Image generation failed - no image file found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi