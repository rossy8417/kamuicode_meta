# ⚠️ 重要：これは参照テンプレートです。実際のワークフローではインライン実装してください
# 詳細は /minimal-units/USAGE_GUIDELINES.md を参照

name: lipsync-pixverse
description: Pixverseリップシンク生成の最小単位ユニット（MCP統合版）

on:
  workflow_call:
    inputs:
      video_url:
        description: '入力動画URL'
        required: true
        type: string
      audio_url:
        description: '入力音声URL'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      model:
        description: '使用するリップシンクモデル'
        required: false
        type: string
        default: 'v2v-fal-pixverse-lipsync'
    outputs:
      video_url:
        description: 'リップシンク動画のURL'
        value: ${{ jobs.generate.outputs.video_url }}
      video_path:
        description: 'ローカル保存されたリップシンク動画パス'
        value: ${{ jobs.generate.outputs.video_path }}
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN:
        description: 'Claude Code OAuth Token'
        required: true

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      video_url: ${{ steps.execute.outputs.video_url }}
      video_path: ${{ steps.execute.outputs.video_path }}
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code
        run: |
          npm init -y
          npm install @anthropic-ai/claude-code
      
      - name: Generate Lipsync Video
        id: execute
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          CLAUDE_CODE_CI_MODE: true
          CLAUDE_CODE_AUTO_APPROVE_MCP: true
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # モデル固有のツール名を設定
          case "${{ inputs.model }}" in
            "v2v-fal-pixverse-lipsync")
              SUBMIT_TOOL="mcp__v2v-fal-pixverse-lipsync__pixverse_lipsync_submit"
              STATUS_TOOL="mcp__v2v-fal-pixverse-lipsync__pixverse_lipsync_status"
              RESULT_TOOL="mcp__v2v-fal-pixverse-lipsync__pixverse_lipsync_result"
              ;;
            "v2v-fal-creatify-lipsync")
              SUBMIT_TOOL="mcp__v2v-fal-creatify-lipsync__lipsync_submit"
              STATUS_TOOL="mcp__v2v-fal-creatify-lipsync__lipsync_status"
              RESULT_TOOL="mcp__v2v-fal-creatify-lipsync__lipsync_result"
              ;;
          esac
          
          # プロンプト構築
          PROMPT="Generate lipsync video using ${{ inputs.model }}:
          
          **Video URL**: ${{ inputs.video_url }}
          **Audio URL**: ${{ inputs.audio_url }}
          
          Steps:
          1. Use $SUBMIT_TOOL with video and audio URLs
          2. Monitor status with $STATUS_TOOL (may take 60-120 seconds)
          3. Get result with $RESULT_TOOL
          4. Save video URL to ${{ inputs.output_dir }}/lipsync-url.txt
          5. Download to ${{ inputs.output_dir }}/lipsync.mp4"
          
          # Claude Code実行
          npx @anthropic-ai/claude-code \
            -p "$PROMPT" \
            --mcp-config ".claude/mcp-kamuicode.json" \
            --allowedTools "$SUBMIT_TOOL,$STATUS_TOOL,$RESULT_TOOL,Bash,Write" \
            --permission-mode "acceptEdits"
          
          # 結果確認とファイル名の柔軟な処理
          cd "${{ inputs.output_dir }}"
          
          # lipsync.mp4が存在しない場合の自動修正
          if [ ! -f "lipsync.mp4" ]; then
            for file in *.mp4; do
              if [ -f "$file" ] && [ "$file" != "lipsync.mp4" ]; then
                mv "$file" "lipsync.mp4"
                echo "✅ Renamed $file to lipsync.mp4"
                break
              fi
            done
          fi
          
          # URLファイルを確認
          if [ -f "lipsync-url.txt" ]; then
            VIDEO_URL=$(cat lipsync-url.txt)
          else
            VIDEO_URL="generated-lipsync-url"
          fi
          
          # 最終確認
          if [ -f "lipsync.mp4" ]; then
            echo "video_url=$VIDEO_URL" >> $GITHUB_OUTPUT
            echo "video_path=${{ inputs.output_dir }}/lipsync.mp4" >> $GITHUB_OUTPUT
            echo "✅ Lipsync generation completed successfully"
          else
            echo "❌ Lipsync generation failed - no video file found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi