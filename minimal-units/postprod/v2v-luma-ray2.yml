name: v2v-luma-ray2
description: Luma Ray2動画変換の最小単位ユニット

on:
  workflow_call:
    inputs:
      video_path:
        description: '入力動画パス'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      prompt:
        description: '変換プロンプト'
        required: true
        type: string
      style:
        description: '変換スタイル'
        required: false
        type: string
        default: 'cinematic'
      intensity:
        description: '変換強度（0-1）'
        required: false
        type: string
        default: '0.7'
    outputs:
      video_path:
        description: '変換された動画パス'
        value: ${{ jobs.convert.outputs.video_path }}
      video_url:
        description: '変換された動画URL'
        value: ${{ jobs.convert.outputs.video_url }}

jobs:
  convert:
    runs-on: ubuntu-latest
    outputs:
      video_path: ${{ steps.execute.outputs.video_path }}
      video_url: ${{ steps.execute.outputs.video_url }}
    
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install requests
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Convert Video with Luma Ray2
        id: execute
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # 動画情報を取得
          VIDEO_INFO=$(ffprobe -v quiet -print_format json -show_format -show_streams "${{ inputs.video_path }}")
          DURATION=$(echo "$VIDEO_INFO" | jq -r '.format.duration')
          WIDTH=$(echo "$VIDEO_INFO" | jq -r '.streams[] | select(.codec_type=="video") | .width')
          HEIGHT=$(echo "$VIDEO_INFO" | jq -r '.streams[] | select(.codec_type=="video") | .height')
          
          echo "Input video: ${WIDTH}x${HEIGHT}, ${DURATION}s"
          
          # MCP経由でLuma Ray2を呼び出す（シミュレーション）
          python3 -c "
import json
import os
import time

# Luma Ray2 APIパラメータ
params = {
    'video_path': '${{ inputs.video_path }}',
    'prompt': '''${{ inputs.prompt }}''',
    'style': '${{ inputs.style }}',
    'intensity': float('${{ inputs.intensity }}'),
    'dimensions': f'{WIDTH}x{HEIGHT}'
}

# APIレスポンスをシミュレート
# 実際はMCP v2v-fal-luma-ray2-modify経由で実行
response = {
    'status': 'completed',
    'video_url': 'https://v3.fal.media/files/user/abc123/luma-ray2-output.mp4',
    'processing_time': 45.2,
    'metadata': {
        'original_duration': float('$DURATION'),
        'output_duration': float('$DURATION'),
        'style_applied': '${{ inputs.style }}',
        'intensity': float('${{ inputs.intensity }}')
    }
}

# 結果を保存
with open('${{ inputs.output_dir }}/luma_ray2_result.json', 'w') as f:
    json.dump(response, f, indent=2)

print(f'Video conversion completed: {response[\"video_url\"]}')
"
          
          # 仮の変換動画を作成（テスト用）
          # 実際はLuma Ray2のURLから動画をダウンロード
          ffmpeg -i "${{ inputs.video_path }}" \
            -vf "curves=preset=vintage,eq=contrast=1.1:brightness=0.05" \
            -c:a copy \
            "${{ inputs.output_dir }}/video.mp4"
          
          # 結果を設定
          echo "video_path=${{ inputs.output_dir }}/video.mp4" >> $GITHUB_OUTPUT
          echo "video_url=https://v3.fal.media/files/user/abc123/luma-ray2-output.mp4" >> $GITHUB_OUTPUT