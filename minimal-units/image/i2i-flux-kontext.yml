name: i2i-flux-kontext
description: Flux Kontext画像変換の最小単位ユニット

on:
  workflow_call:
    inputs:
      image_path:
        description: '入力画像パス'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      prompt:
        description: '変換プロンプト'
        required: true
        type: string
      style:
        description: '変換スタイル'
        required: false
        type: string
        default: 'photorealistic'
      strength:
        description: '変換強度（0-1）'
        required: false
        type: string
        default: '0.75'
    outputs:
      image_path:
        description: '変換された画像パス'
        value: ${{ jobs.convert.outputs.image_path }}
      image_url:
        description: '変換された画像URL'
        value: ${{ jobs.convert.outputs.image_url }}

jobs:
  convert:
    runs-on: ubuntu-latest
    outputs:
      image_path: ${{ steps.execute.outputs.image_path }}
      image_url: ${{ steps.execute.outputs.image_url }}
    
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install requests Pillow
      
      - name: Convert Image with Flux Kontext
        id: execute
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # 画像情報を取得
          python3 -c "
from PIL import Image
import json
import os

# 画像を読み込み
img = Image.open('${{ inputs.image_path }}')
width, height = img.size
format = img.format or 'JPEG'

print(f'Input image: {width}x{height} {format}')

# Flux Kontext APIパラメータ
params = {
    'image_path': '${{ inputs.image_path }}',
    'prompt': '''${{ inputs.prompt }}''',
    'style': '${{ inputs.style }}',
    'strength': float('${{ inputs.strength }}'),
    'preserve_composition': True,
    'enhance_details': True
}

# APIレスポンスをシミュレート
# 実際はMCP i2i-fal-flux-kontext-max経由で実行
response = {
    'status': 'completed',
    'image_url': 'https://v3.fal.media/files/user/jkl012/flux-kontext-output.png',
    'processing_time': 12.3,
    'metadata': {
        'input_size': f'{width}x{height}',
        'output_size': f'{width}x{height}',
        'style_applied': '${{ inputs.style }}',
        'strength': float('${{ inputs.strength }}'),
        'model': 'flux-1.1-pro-kontext'
    }
}

# 結果を保存
with open('${{ inputs.output_dir }}/flux_kontext_result.json', 'w') as f:
    json.dump(response, f, indent=2)

# 仮の変換画像を作成（テスト用）
# 実際はFlux KontextのURLから画像をダウンロード
from PIL import ImageEnhance, ImageFilter

# 画像処理シミュレーション
enhancer = ImageEnhance.Contrast(img)
img_enhanced = enhancer.enhance(1.2)
enhancer = ImageEnhance.Color(img_enhanced)
img_enhanced = enhancer.enhance(1.1)

# 保存
output_path = '${{ inputs.output_dir }}/image.png'
img_enhanced.save(output_path, 'PNG', quality=95)

print(f'Image conversion completed: {output_path}')
"
          
          # 結果を設定
          echo "image_path=${{ inputs.output_dir }}/image.png" >> $GITHUB_OUTPUT
          echo "image_url=https://v3.fal.media/files/user/jkl012/flux-kontext-output.png" >> $GITHUB_OUTPUT