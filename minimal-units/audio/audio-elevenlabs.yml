name: audio-elevenlabs
description: ElevenLabs音声生成の最小単位ユニット

on:
  workflow_call:
    inputs:
      text:
        description: '音声化するテキスト'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      voice_id:
        description: 'ElevenLabs音声ID'
        required: false
        type: string
        default: 'rachel'
      model_id:
        description: 'ElevenLabsモデルID'
        required: false
        type: string
        default: 'eleven_multilingual_v2'
      stability:
        description: '音声の安定性（0-1）'
        required: false
        type: string
        default: '0.5'
      similarity_boost:
        description: '類似性ブースト（0-1）'
        required: false
        type: string
        default: '0.5'
    outputs:
      audio_path:
        description: '生成された音声ファイルパス'
        value: ${{ jobs.generate.outputs.audio_path }}
      duration:
        description: '音声の長さ（秒）'
        value: ${{ jobs.generate.outputs.duration }}
    secrets:
      elevenlabs_api_key:
        description: 'ElevenLabs API Key'
        required: true

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      audio_path: ${{ steps.execute.outputs.audio_path }}
      duration: ${{ steps.execute.outputs.duration }}
    
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install requests
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Generate Audio with ElevenLabs
        id: execute
        env:
          ELEVENLABS_API_KEY: ${{ secrets.elevenlabs_api_key }}
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # Pythonスクリプトで音声生成（実際のAPIコールをシミュレート）
          python3 -c "
import json
import os
import base64

# ElevenLabs API設定（実際の実装では本物のAPIを使用）
text = '''${{ inputs.text }}'''
voice_id = '${{ inputs.voice_id }}'
model_id = '${{ inputs.model_id }}'

# APIレスポンスをシミュレート（実際はAPIコール）
# 実際の実装:
# response = requests.post(
#     f'https://api.elevenlabs.io/v1/text-to-speech/{voice_id}',
#     headers={'xi-api-key': os.environ['ELEVENLABS_API_KEY']},
#     json={
#         'text': text,
#         'model_id': model_id,
#         'voice_settings': {
#             'stability': float('${{ inputs.stability }}'),
#             'similarity_boost': float('${{ inputs.similarity_boost }}')
#         }
#     }
# )

# シミュレート用の仮音声データ
audio_data = b'RIFF...WAV...'  # 実際のWAVデータ

# 音声ファイルを保存
output_path = '${{ inputs.output_dir }}/audio.mp3'
with open(output_path, 'wb') as f:
    f.write(audio_data)

# メタデータを保存
metadata = {
    'text': text,
    'voice_id': voice_id,
    'model_id': model_id,
    'stability': float('${{ inputs.stability }}'),
    'similarity_boost': float('${{ inputs.similarity_boost }}'),
    'character_count': len(text)
}

with open('${{ inputs.output_dir }}/metadata.json', 'w') as f:
    json.dump(metadata, f, indent=2)

print(f'Audio generated: {output_path}')
"
          
          # 仮の音声ファイルを生成（テスト用）
          ffmpeg -f lavfi -i "sine=frequency=440:duration=5" \
            -ar 44100 -ac 2 -ab 128k \
            "${{ inputs.output_dir }}/audio.mp3"
          
          # 音声の長さを取得
          DURATION=$(ffprobe -v quiet -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "${{ inputs.output_dir }}/audio.mp3")
          
          echo "audio_path=${{ inputs.output_dir }}/audio.mp3" >> $GITHUB_OUTPUT
          echo "duration=$DURATION" >> $GITHUB_OUTPUT