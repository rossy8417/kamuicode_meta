name: news-planning
description: ニュース制作計画立案の最小単位ユニット

on:
  workflow_call:
    inputs:
      topic:
        description: 'ニューストピック'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      target_audience:
        description: 'ターゲット視聴者'
        required: false
        type: string
        default: 'general'
      style:
        description: 'ニューススタイル（formal/casual/educational）'
        required: false
        type: string
        default: 'formal'
      duration:
        description: '目標時間（秒）'
        required: false
        type: string
        default: '60'
    outputs:
      plan_path:
        description: '計画書パス'
        value: ${{ jobs.plan.outputs.plan_path }}
      script:
        description: 'ニューススクリプト'
        value: ${{ jobs.plan.outputs.script }}
      segments:
        description: 'セグメント構成'
        value: ${{ jobs.plan.outputs.segments }}
    secrets:
      anthropic_api_key:
        description: 'Anthropic API Key'
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      plan_path: ${{ steps.execute.outputs.plan_path }}
      script: ${{ steps.execute.outputs.script }}
      segments: ${{ steps.execute.outputs.segments }}
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Plan News Production
        id: execute
        env:
          ANTHROPIC_API_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # プロンプトの構築
          PROMPT="Create a comprehensive news production plan for the following topic:

          Topic: ${{ inputs.topic }}
          Target Audience: ${{ inputs.target_audience }}
          Style: ${{ inputs.style }}
          Duration: ${{ inputs.duration }} seconds

          Tasks:
          1. Research and understand the topic
          2. Create a structured news plan
          3. Write a complete news script
          4. Define visual segments
          5. Save the plan to '${{ inputs.output_dir }}/news_plan.json'

          The plan should include:
          {
            \"title\": \"News title\",
            \"summary\": \"Brief summary\",
            \"script\": \"Full news script with timing\",
            \"segments\": [
              {
                \"type\": \"intro/main/conclusion\",
                \"duration\": seconds,
                \"content\": \"segment content\",
                \"visuals\": \"visual description\"
              }
            ],
            \"keywords\": [],
            \"sources\": []
          }

          Ensure the script:
          - Matches the ${{ inputs.style }} style
          - Is appropriate for ${{ inputs.target_audience }}
          - Fits within ${{ inputs.duration }} seconds when read aloud
          - Includes clear transitions between segments"
          
          # Claude Code実行
          npx @anthropic-ai/claude-code \
            --allowedTools "Write" \
            --max-turns 10 \
            --permission-mode "acceptEdits" \
            -p "$PROMPT"
          
          # 結果確認
          if [ -f "${{ inputs.output_dir }}/news_plan.json" ]; then
            PLAN=$(cat "${{ inputs.output_dir }}/news_plan.json")
            SCRIPT=$(echo "$PLAN" | jq -r '.script // "No script generated"' | tr '\n' ' ')
            SEGMENTS=$(echo "$PLAN" | jq -c '.segments // []')
            
            echo "plan_path=${{ inputs.output_dir }}/news_plan.json" >> $GITHUB_OUTPUT
            echo "script=$SCRIPT" >> $GITHUB_OUTPUT
            echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
          else
            # フォールバック
            echo "{\"error\": \"Planning failed\"}" > "${{ inputs.output_dir }}/news_plan.json"
            echo "plan_path=${{ inputs.output_dir }}/news_plan.json" >> $GITHUB_OUTPUT
            echo "script=Planning failed" >> $GITHUB_OUTPUT
            echo "segments=[]" >> $GITHUB_OUTPUT
          fi