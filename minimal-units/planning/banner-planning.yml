name: banner-planning
description: バナー制作計画立案の最小単位ユニット

on:
  workflow_call:
    inputs:
      concept:
        description: 'バナーコンセプト'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      purpose:
        description: 'バナーの目的（advertising/social/web）'
        required: false
        type: string
        default: 'web'
      target_sizes:
        description: 'ターゲットサイズ（カンマ区切り）'
        required: false
        type: string
        default: '1200x628,300x250,728x90'
    outputs:
      plan_path:
        description: 'バナー計画書パス'
        value: ${{ jobs.plan.outputs.plan_path }}
      design_specs:
        description: 'デザイン仕様'
        value: ${{ jobs.plan.outputs.design_specs }}
      copy_text:
        description: 'コピーテキスト'
        value: ${{ jobs.plan.outputs.copy_text }}
    secrets:
      anthropic_api_key:
        description: 'Anthropic API Key'
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      plan_path: ${{ steps.execute.outputs.plan_path }}
      design_specs: ${{ steps.execute.outputs.design_specs }}
      copy_text: ${{ steps.execute.outputs.copy_text }}
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Plan Banner Creation
        id: execute
        env:
          ANTHROPIC_API_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # プロンプトの構築
          PROMPT="Create a comprehensive banner design plan for:

          Concept: ${{ inputs.concept }}
          Purpose: ${{ inputs.purpose }}
          Target Sizes: ${{ inputs.target_sizes }}

          Tasks:
          1. Analyze the concept and purpose
          2. Create design specifications
          3. Write compelling copy text
          4. Define visual hierarchy
          5. Save the plan to '${{ inputs.output_dir }}/banner_plan.json'

          Plan structure:
          {
            \"concept\": \"${{ inputs.concept }}\",
            \"purpose\": \"${{ inputs.purpose }}\",
            \"copy\": {
              \"headline\": \"Main headline\",
              \"subheadline\": \"Supporting text\",
              \"cta\": \"Call to action\"
            },
            \"design_specs\": {
              \"color_palette\": [\"#color1\", \"#color2\"],
              \"typography\": {
                \"headline\": \"font and size\",
                \"body\": \"font and size\"
              },
              \"layout\": \"layout description\",
              \"visual_elements\": []
            },
            \"size_variations\": [
              {
                \"size\": \"1200x628\",
                \"layout_adjustments\": \"specific adjustments\"
              }
            ]
          }

          Ensure the design is:
          - Eye-catching and professional
          - Appropriate for ${{ inputs.purpose }}
          - Scalable across different sizes
          - Clear and readable"
          
          # Claude Code実行
          npx @anthropic-ai/claude-code \
            --allowedTools "Write" \
            --max-turns 10 \
            --permission-mode "acceptEdits" \
            -p "$PROMPT"
          
          # 結果確認
          if [ -f "${{ inputs.output_dir }}/banner_plan.json" ]; then
            PLAN=$(cat "${{ inputs.output_dir }}/banner_plan.json")
            DESIGN_SPECS=$(echo "$PLAN" | jq -c '.design_specs // {}')
            COPY_TEXT=$(echo "$PLAN" | jq -r '.copy.headline // "No headline"')
            
            echo "plan_path=${{ inputs.output_dir }}/banner_plan.json" >> $GITHUB_OUTPUT
            echo "design_specs=$DESIGN_SPECS" >> $GITHUB_OUTPUT
            echo "copy_text=$COPY_TEXT" >> $GITHUB_OUTPUT
          else
            # フォールバック
            echo "{\"error\": \"Planning failed\"}" > "${{ inputs.output_dir }}/banner_plan.json"
            echo "plan_path=${{ inputs.output_dir }}/banner_plan.json" >> $GITHUB_OUTPUT
            echo "design_specs={}" >> $GITHUB_OUTPUT
            echo "copy_text=Planning failed" >> $GITHUB_OUTPUT
          fi