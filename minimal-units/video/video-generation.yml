name: video-generation
description: 動画生成の最小単位ユニット（i2v/t2v対応）

on:
  workflow_call:
    inputs:
      prompt:
        description: '動画生成用プロンプト'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      model:
        description: '使用するモデル'
        required: false
        type: string
        default: 'i2v-fal-hailuo-02-pro'
      image_url:
        description: '入力画像URL（i2vの場合）'
        required: false
        type: string
      duration:
        description: '動画の長さ（秒）'
        required: false
        type: string
        default: '5'
    outputs:
      video_url:
        description: '生成された動画のURL'
        value: ${{ jobs.generate.outputs.video_url }}
      video_path:
        description: 'ローカル保存された動画パス'
        value: ${{ jobs.generate.outputs.video_path }}
    secrets:
      anthropic_api_key:
        description: 'Anthropic API Key'
        required: true

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      video_url: ${{ steps.execute.outputs.video_url }}
      video_path: ${{ steps.execute.outputs.video_path }}
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Generate Video
        id: execute
        env:
          ANTHROPIC_API_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # モデル固有のツール名を設定
          case "${{ inputs.model }}" in
            "i2v-fal-hailuo-02-pro")
              SUBMIT_TOOL="mcp__i2v-fal-hailuo-02-pro__hailuo_02_submit"
              STATUS_TOOL="mcp__i2v-fal-hailuo-02-pro__hailuo_02_status"
              RESULT_TOOL="mcp__i2v-fal-hailuo-02-pro__hailuo_02_result"
              MODE="i2v"
              ;;
            "t2v-fal-veo3-fast")
              SUBMIT_TOOL="mcp__t2v-fal-veo3-fast__veo3_fast_submit"
              STATUS_TOOL="mcp__t2v-fal-veo3-fast__veo3_fast_status"
              RESULT_TOOL="mcp__t2v-fal-veo3-fast__veo3_fast_result"
              MODE="t2v"
              ;;
            "t2v-fal-wan-v2-2-a14b-t2v")
              SUBMIT_TOOL="mcp__t2v-fal-wan-v2-2-a14b-t2v__wan_v2_submit"
              STATUS_TOOL="mcp__t2v-fal-wan-v2-2-a14b-t2v__wan_v2_status"
              RESULT_TOOL="mcp__t2v-fal-wan-v2-2-a14b-t2v__wan_v2_result"
              MODE="t2v"
              ;;
            "i2v-fal-bytedance-seedance-v1-lite")
              SUBMIT_TOOL="mcp__i2v-fal-bytedance-seedance-v1-lite__bytedance_seedance_v1_lite_i2v_submit"
              STATUS_TOOL="mcp__i2v-fal-bytedance-seedance-v1-lite__bytedance_seedance_v1_lite_i2v_status"
              RESULT_TOOL="mcp__i2v-fal-bytedance-seedance-v1-lite__bytedance_seedance_v1_lite_i2v_result"
              MODE="i2v"
              ;;
          esac
          
          # プロンプト構築
          if [ "$MODE" = "i2v" ]; then
            PROMPT="Generate a video using ${{ inputs.model }} with:
            
            **Image URL**: ${{ inputs.image_url }}
            **Motion Prompt**: ${{ inputs.prompt }}
            **Duration**: ${{ inputs.duration }} seconds
            
            Steps:
            1. Use $SUBMIT_TOOL with the image URL and prompt
            2. Monitor with $STATUS_TOOL
            3. Get result with $RESULT_TOOL
            4. Save video URL to ${{ inputs.output_dir }}/video-url.txt
            5. Download to ${{ inputs.output_dir }}/video.mp4"
          else
            PROMPT="Generate a video using ${{ inputs.model }} with:
            
            **Text Prompt**: ${{ inputs.prompt }}
            **Duration**: ${{ inputs.duration }} seconds
            
            Steps:
            1. Use $SUBMIT_TOOL with the text prompt
            2. Monitor with $STATUS_TOOL
            3. Get result with $RESULT_TOOL
            4. Save video URL to ${{ inputs.output_dir }}/video-url.txt
            5. Download to ${{ inputs.output_dir }}/video.mp4"
          fi
          
          # Claude Code実行
          npx @anthropic-ai/claude-code \
            --mcp-config=".claude/mcp-kamuicode.json" \
            --allowedTools "$SUBMIT_TOOL,$STATUS_TOOL,$RESULT_TOOL,Bash,Write" \
            --max-turns 40 \
            --permission-mode "acceptEdits" \
            -p "$PROMPT"
          
          # 結果確認
          if [ -f "${{ inputs.output_dir }}/video-url.txt" ] && [ -f "${{ inputs.output_dir }}/video.mp4" ]; then
            VIDEO_URL=$(cat "${{ inputs.output_dir }}/video-url.txt")
            echo "video_url=$VIDEO_URL" >> $GITHUB_OUTPUT
            echo "video_path=${{ inputs.output_dir }}/video.mp4" >> $GITHUB_OUTPUT
          else
            echo "❌ Video generation failed"
            exit 1
          fi