name: title-composition
description: タイトルフレーム合成の最小単位ユニット

on:
  workflow_call:
    inputs:
      video_path:
        description: '元動画パス'
        required: true
        type: string
      title_image_path:
        description: 'タイトル画像パス'
        required: true
        type: string
      output_dir:
        description: '出力ディレクトリパス'
        required: true
        type: string
      title_duration:
        description: 'タイトル表示時間（秒）'
        required: false
        type: string
        default: '3'
      fade_duration:
        description: 'フェード時間（秒）'
        required: false
        type: string
        default: '0.5'
    outputs:
      video_path:
        description: 'タイトル付き動画パス'
        value: ${{ jobs.compose.outputs.video_path }}
      duration:
        description: '動画の総時間'
        value: ${{ jobs.compose.outputs.duration }}

jobs:
  compose:
    runs-on: ubuntu-latest
    outputs:
      video_path: ${{ steps.execute.outputs.video_path }}
      duration: ${{ steps.execute.outputs.duration }}
    
    steps:
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Compose Title Frame
        id: execute
        run: |
          # ディレクトリ作成
          mkdir -p "${{ inputs.output_dir }}"
          
          # 動画情報を取得
          VIDEO_WIDTH=$(ffprobe -v quiet -select_streams v:0 -show_entries stream=width -of csv=s=x:p=0 "${{ inputs.video_path }}")
          VIDEO_HEIGHT=$(ffprobe -v quiet -select_streams v:0 -show_entries stream=height -of csv=s=x:p=0 "${{ inputs.video_path }}")
          VIDEO_FPS=$(ffprobe -v quiet -select_streams v:0 -show_entries stream=r_frame_rate -of csv=s=x:p=0 "${{ inputs.video_path }}")
          
          echo "Video specs: ${VIDEO_WIDTH}x${VIDEO_HEIGHT} @ ${VIDEO_FPS} fps"
          
          # タイトル画像を動画化（フェード効果付き）
          ffmpeg -loop 1 -i "${{ inputs.title_image_path }}" \
            -t ${{ inputs.title_duration }} \
            -vf "scale=${VIDEO_WIDTH}:${VIDEO_HEIGHT}:force_original_aspect_ratio=increase,crop=${VIDEO_WIDTH}:${VIDEO_HEIGHT},fade=t=in:st=0:d=${{ inputs.fade_duration }},fade=t=out:st=$(echo "${{ inputs.title_duration }} - ${{ inputs.fade_duration }}" | bc):d=${{ inputs.fade_duration }}" \
            -r ${VIDEO_FPS} \
            -pix_fmt yuv420p \
            -an \
            "${{ inputs.output_dir }}/title_segment.mp4"
          
          # 音声処理（元動画に音声がある場合）
          if ffprobe -v quiet -select_streams a:0 -show_entries stream=codec_name -of csv=s=x:p=0 "${{ inputs.video_path }}" 2>/dev/null | grep -q .; then
            # 無音音声を作成
            SAMPLE_RATE=$(ffprobe -v quiet -select_streams a:0 -show_entries stream=sample_rate -of csv=s=x:p=0 "${{ inputs.video_path }}")
            ffmpeg -f lavfi -i "anullsrc=channel_layout=stereo:sample_rate=${SAMPLE_RATE}" \
              -t ${{ inputs.title_duration }} \
              -c:a aac -ab 128k \
              "${{ inputs.output_dir }}/title_silence.aac"
            
            # タイトル動画に無音を追加
            ffmpeg -i "${{ inputs.output_dir }}/title_segment.mp4" -i "${{ inputs.output_dir }}/title_silence.aac" \
              -c:v copy -c:a copy -shortest \
              "${{ inputs.output_dir }}/title_with_audio.mp4"
            
            TITLE_VIDEO="${{ inputs.output_dir }}/title_with_audio.mp4"
          else
            TITLE_VIDEO="${{ inputs.output_dir }}/title_segment.mp4"
          fi
          
          # 動画を連結
          echo "file '$TITLE_VIDEO'" > "${{ inputs.output_dir }}/concat_list.txt"
          echo "file '${{ inputs.video_path }}'" >> "${{ inputs.output_dir }}/concat_list.txt"
          
          ffmpeg -f concat -safe 0 -i "${{ inputs.output_dir }}/concat_list.txt" \
            -c copy \
            "${{ inputs.output_dir }}/video.mp4"
          
          # 最終動画の長さを取得
          DURATION=$(ffprobe -v quiet -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "${{ inputs.output_dir }}/video.mp4")
          
          echo "video_path=${{ inputs.output_dir }}/video.mp4" >> $GITHUB_OUTPUT
          echo "duration=$DURATION" >> $GITHUB_OUTPUT