name: orchestrator-v2v-pixverse-lipsync-single

on:
  workflow_dispatch:
    inputs:
      concept:
        description: 'v2v Pixverseリップシンク動画のコンセプト（制限内1本作成）'
        required: true
        type: string
      image-model:
        description: 'T2I画像生成モデル'
        required: false
        type: string
        default: 't2i-fal-imagen4-ultra'
      video-model:
        description: 'I2V動画生成モデル'
        required: false
        type: string
        default: 'i2v-fal-hailuo-02-pro'
      audio-model:
        description: '音声生成モデル'
        required: false
        type: string
        default: 'v2v-fal-minimax-voice-design'

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  # 1. ブランチ・フォルダセットアップ
  setup:
    uses: ./.github/workflows/module-setup-branch.yml
    with:
      concept: ${{ inputs.concept }}
      project_prefix: 'pixverse-lipsync'

  # 2. Pixverse制限対応AI企画（動的セグメント数対応）
  planning:
    needs: setup
    uses: ./.github/workflows/module-planning-pixverse-lipsync-ccsdk.yml
    with:
      concept: ${{ inputs.concept }}
      video-model: ${{ inputs.video-model }}
      audio-model: ${{ inputs.audio-model }}
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      github_pat: ${{ secrets.PAT_TOKEN }}

  # 3. T2I画像生成（シングル）
  image-generation:
    needs: [setup, planning]
    uses: ./.github/workflows/module-image-generation-kc-multi-model-ccsdk.yml
    with:
      concept: ${{ inputs.concept }}
      model-type: ${{ inputs.image-model }}
      image-prompt: ${{ needs.planning.outputs.image-prompt-1 }}
      video_index: '1'
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      github_pat: ${{ secrets.PAT_TOKEN }}

  # 4. I2V動画生成（シングル、Pixverse 5MB制限チェック付き）
  video-generation:
    needs: [setup, planning, image-generation]
    uses: ./.github/workflows/module-video-generation-kc-multi-model-ccsdk.yml
    with:
      concept: ${{ inputs.concept }}
      model-type: ${{ inputs.video-model }}
      video-prompt: ${{ needs.planning.outputs.video-concept-1 }}
      image-url: ${{ needs.image-generation.outputs.image-url }}
      video_index: '1'
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      github_pat: ${{ secrets.PAT_TOKEN }}

  # 5. MiniMax Voice Design音声生成（シングル、Pixverse 30秒制限チェック付き）
  audio-generation:
    needs: [setup, planning]
    uses: ./.github/workflows/module-audio-generation-kc-minimax-voice-design-ccsdk.yml
    with:
      concept: ${{ inputs.concept }}
      text-prompt: ${{ needs.planning.outputs.audio-script-1 }}
      voice-character: ${{ needs.planning.outputs.voice-character-1 }}
      audio_index: '1'
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      github_pat: ${{ secrets.PAT_TOKEN }}

  # 6. Pixverseリップシンク生成（シングル）
  lipsync-generation:
    needs: [setup, planning, video-generation, audio-generation]
    uses: ./.github/workflows/module-lipsync-generation-kc-multi-model-ccsdk.yml
    with:
      concept: ${{ inputs.concept }}
      model-type: 'v2v-fal-pixverse-lipsync'
      video-url: ${{ needs.video-generation.outputs.video-url }}
      audio-url: ${{ needs.audio-generation.outputs.audio-url }}
      lipsync-settings: '{}'
      lipsync_index: '1'
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
      github_pat: ${{ secrets.PAT_TOKEN }}

  # 7. プルリクエスト作成
  create-pr:
    needs: [setup, lipsync-generation]
    uses: ./.github/workflows/module-create-pr.yml
    with:
      concept: ${{ inputs.concept }}
      branch-name: ${{ needs.setup.outputs.branch-name }}
      folder-name: ${{ needs.setup.outputs.folder-name }}
    secrets:
      github_pat: ${{ secrets.PAT_TOKEN }}