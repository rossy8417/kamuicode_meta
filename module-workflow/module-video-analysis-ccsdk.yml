name: module-video-analysis-ccsdk

on:
  workflow_call:
    inputs:
      concept:
        description: 'ユーザーのコンセプト'
        required: true
        type: string
      image-url:
        description: '画像URL'
        required: true
        type: string
      video-url:
        description: '動画URL'
        required: true
        type: string
      image-prompt:
        description: '画像生成用プロンプト'
        required: true
        type: string
      video-prompt:
        description: '動画生成用プロンプト'
        required: true
        type: string
      branch-name:
        description: 'ワーキングブランチ名'
        required: true
        type: string
      folder-name:
        description: 'プロジェクトフォルダ名'
        required: true
        type: string
      video_index:
        description: '動画インデックス'
        required: false
        type: string
        default: '1'
    outputs:
      completed:
        description: '完了ステータス'
        value: ${{ jobs.video-analysis.outputs.completed }}
    secrets:
      anthropic_api_key:
        description: 'Anthropic API Key'
        required: true
      gemini_api_key:
        description: 'Gemini API Key'
        required: false
      github_pat:
        description: 'GitHub Token'
        required: true

jobs:
  video-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      completed: ${{ steps.analyze-complete.outputs.completed }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch-name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
          
      - name: 📊 動画分析エージェント (Claude Code)
        id: analyze-video
        env:
          ANTHROPIC_API_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          echo "::group::📊 Video Analysis Agent Execution"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # プロンプトの構築
          PROMPT="
            📊 **動画分析タスク - Gemini Vision エージェント**
            
            **タスク**: kamuicodeで生成された動画を視覚的に分析し、品質評価を行う
            
            **入力データ**:
            - **動画URL**: ${{ inputs.video-url }}
            - **画像URL**: ${{ inputs.image-url }}
            - **基本コンセプト**: ${{ inputs.concept }}
            - **画像プロンプト**: ${{ inputs.image-prompt }}
            - **動画プロンプト**: ${{ inputs.video-prompt }}
            
            **重要**: もし動画URLが空または"undefined"の場合は、URLが正しく渡されていないことを報告し、可能な範囲で分析を実行してください
            
            **分析手順**:
            1. **ディレクトリ作成**:
               ```bash
               mkdir -p ${{ inputs.folder-name }}/analysis-${{ inputs.video_index }}
               ```
               
            2. **動画URL確認**:
               - 動画URLが利用可能かを確認
               - もし動画URLが空の場合は、エラーメッセージを出力
               - URLが利用可能な場合は、Gemini Vision APIでアクセス
               
            3. **プロフェッショナル視点での厳格評価**:
               あなたは映像業界のプロフェッショナル（広告代理店のクリエイティブディレクター、映像プロデューサー、アニメーション監督）として、商用利用の観点から厳しく評価してください。
               
            4. **技術品質評価** (1-10点、8点以上は極めて稀):
               - **解像度・画質**: ノイズ、ブロックノイズ、圧縮アーティファクトの有無
               - **フレームレート**: 動きの滑らかさ、フレーム落ちの有無
               - **色再現**: 色飽和度、色相の正確性、グラデーション品質
               - **シャープネス**: 被写体の輪郭、細部の鮮明さ
               - **安定性**: 手ぶれ、予期しない動き、フレーム間の一貫性
               
            5. **視覚的インパクト評価** (1-10点、7点以上は商用レベル):
               - **構図**: 視線誘導、バランス、プロフェッショナルな見栄え
               - **ライティング**: 照明の質、影の表現、明暗のコントラスト
               - **色彩設計**: 配色の調和、ブランドイメージとの適合性
               - **動きのクオリティ**: 自然さ、意図性、視覚的魅力
               - **全体的な美感**: 第一印象、視聴者の関心維持力
               
            6. **コンテンツ適合性評価** (1-10点、減点方式で厳格に):
               - **コンセプト再現度**: "${{ inputs.concept }}" の意図を正確に表現しているか
               - **ターゲット適合性**: 想定視聴者に適した内容・表現か
               - **ブランド安全性**: 炎上リスク、不適切な表現の有無
               - **競合優位性**: 類似コンテンツと比較した独自性
               - **継続視聴性**: 最後まで見たくなる魅力があるか
               
            7. **商用利用可能性評価** (1-10点、実際のビジネス観点で):
               - **SNS広告適性**: Instagram、TikTok、YouTube広告として使用可能か
               - **企業PR適性**: 会社紹介、製品紹介動画として使用可能か
               - **TV CM適性**: テレビCMとして放送可能なクオリティか
               - **Web掲載適性**: 企業サイト、LPでの使用に耐えるか
               - **印刷媒体適性**: 静止画キャプチャが印刷物で使用可能か
               
            8. **改善提案（必須）**:
               - **致命的欠陥**: 即座に修正が必要な問題点
               - **品質向上案**: 具体的な改善方法と期待効果
               - **代替案**: より良いアプローチの提案
               - **追加制作提案**: 同じ予算でより良い結果を得る方法
               
            9. **業界標準比較評価**:
               - **同価格帯比較**: 同じ制作コストの他社作品との比較
               - **競合他社比較**: 同業界の優秀な事例との比較
               - **トレンド適合性**: 現在の映像トレンドとの合致度
               - **将来性**: 1年後でも通用するクオリティか
               
            10. **最終ジャッジ**:
                - **総合評価**: 上記全項目を総合した厳格な評価（1-10点、5点以下は使用不可）
                - **使用可否判定**: 商用利用可能/要修正/使用不可の明確な判定
                - **予算対効果**: 制作コストに見合った価値があるか
                - **次回制作への提言**: より良い結果を得るための具体的アドバイス
               
            8. **分析結果の保存**:
               Write tool を使用して詳細な分析レポートをMarkdownファイルとして保存してください。
               
               ファイルパス: ${{ inputs.folder-name }}/analysis-${{ inputs.video_index }}/video-analysis-${{ inputs.video_index }}.md
               
               **レポート必須項目**:
               - 冒頭に「商用利用可否判定」を大きく記載
               - 各評価項目の点数と詳細理由
               - 具体的な改善提案（最低3つ）
               - 業界標準との比較
               - 推奨利用シーン・非推奨利用シーン
               - 制作会社への具体的フィードバック
               
            **評価の厳格性について**: 
            - **妥協しない**: 「それなりに良い」では不十分。商用利用の観点で厳しく評価
            - **具体的指摘**: 「良い」「悪い」ではなく、具体的にどの部分がどう問題かを明記
            - **比較評価**: 業界標準、競合他社、過去の優秀作品と比較して評価
            - **利用者視点**: 実際にこの動画を見る人（顧客、視聴者）の立場で評価
            - **コスト意識**: 制作コストに見合った価値があるかを厳しく判定
            - **改善必須**: 問題点の指摘だけでなく、具体的な改善策も必須
            
            **評価基準**: 
            - 10点: 業界最高水準（Grammy、Cannes Lions受賞レベル）
            - 8-9点: 商用利用で高い効果が期待できる優秀作品
            - 6-7点: 商用利用可能だが改善の余地あり
            - 4-5点: 要修正、現状では使用推奨不可
            - 1-3点: 使用不可、作り直し必要
            
            **使用可能なツール**:
            - Read/Write/Edit: ファイル操作
            - Bash: コマンド実行
            - WebFetch: 動画URLの内容取得と分析"
          
          echo "🚀 Starting Video Analysis Agent Claude Code CLI..."
          echo "📝 Prompt length: ${#PROMPT}"
          
          # Claude Code CLIの実行
          npx @anthropic-ai/claude-code \
            --max-turns 60 \
            --verbose \
            -p "$PROMPT" || {
              echo "::error::❌ Claude Code CLI execution failed"
              exit 1
            }
          
          echo "::endgroup::"
            
      - name: Mark analysis complete
        id: analyze-complete
        run: |
          ANALYSIS_DIR="${{ inputs.folder-name }}/analysis-${{ inputs.video_index }}"
          
          # 生成されたファイルの確認
          if [ -f "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md" ]; then
            echo "✅ 動画分析レポート作成完了"
            echo "📄 Analysis report preview:"
            head -20 "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "completed=true" >> $GITHUB_OUTPUT
          else
            echo "::warning::動画分析レポートが見つかりません。空のレポートを作成します。"
            mkdir -p "$ANALYSIS_DIR"
            echo "# 動画分析レポート - ${{ inputs.concept }}" > "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "## 分析未完了" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "動画分析が正常に完了しませんでした。手動での確認が必要です。" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "- 動画URL: ${{ inputs.video-url }}" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "- 画像URL: ${{ inputs.image-url }}" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "- コンセプト: ${{ inputs.concept }}" >> "$ANALYSIS_DIR/video-analysis-${{ inputs.video_index }}.md"
            echo "completed=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit analysis results
        env:
          GH_TOKEN: ${{ secrets.github_pat }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No analysis files to commit"
          else
            git commit -m "📊 Add video analysis results: ${{ inputs.concept }} (video-${{ inputs.video_index }})
            
            🤖 Generated with [Claude Code](https://claude.ai/code)
            
            Co-Authored-By: Claude <noreply@anthropic.com>"
            # 並列実行での競合を回避するためのリトライ処理
            for i in {1..3}; do
              git pull --rebase origin ${{ inputs.branch-name }} || true
              if git push origin ${{ inputs.branch-name }}; then
                echo "✅ Push successful on attempt $i"
                break
              else
                echo "⚠️ Push failed on attempt $i, retrying..."
                # ランダムな待機時間（1-5秒）
                sleep $((RANDOM % 5 + 1))
              fi
            done
          fi