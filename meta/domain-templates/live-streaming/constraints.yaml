# Rule references (domain rule files to load additionally)
rule_references:
  - path: "meta/domain-templates/live-streaming/rules/task-breakdown.yaml"
    purpose: "Task decomposition into atomic steps"

# Checklist references (domain-specific MUST/SHOULD)
checklist_references: []
# ライブストリーミングの制約条件と計算式

# 🚨 重要: セグメント数計算は必須です
# ライブ感のある配信体験を設計する重要要素
streaming_segment_constraints:
  # セグメント数計算 - 配信の構成管理
  segment_calculation:
    importance: "CRITICAL - 視聴者の注意維持とインタラクション促進に不可欠"
    formula: |
      # ライブ風動画の場合（事前収録）
      content_segments = ceil(duration_seconds / 120)  # 2分ごとにトピック変更
      
      # ハイライト動画の場合
      highlight_scenes = ceil(duration_seconds / 10)  # 10秒ごとのハイライト
      
      # バーチャル配信の場合
      scene_variations = base_scenes + interaction_points
      
      where:
        - duration_seconds: 配信の長さ
        - base_scenes: 基本シーン数（背景、アングル）
        - interaction_points: インタラクションポイント数
    
    segment_types:
      opening: "オープニング（30-60秒）"
      main_segments: "メインコンテンツ（各2-3分）"
      interaction: "視聴者インタラクション（各1分）"
      transition: "トランジション（各10-15秒）"
      closing: "エンディング（30-60秒）"
    
    examples:
      - "10分配信 → 5セグメント（OP1、メイン3、ED1）"
      - "30分配信 → 15セグメント（トピック切り替え含む）"
      - "60分配信 → 30セグメント（休憩・Q&A含む）"
  
  # ライブ感演出の要素
  live_feeling_elements:
    camera_angles: "最低3アングル（メイン、サブ、俯瞰）"
    scene_switching: "30秒-2分ごとにアングル変更"
    overlay_updates: "リアルタイム情報の更新"

streaming_technical_constraints:
  # 配信遅延管理
  latency_profiles:
    ultra_low_latency:
      target: "< 3秒"
      protocol: ["WebRTC", "SRT", "CMAF-LL"]
      buffer_size: "500ms"
      segment_duration: "200ms"
      use_cases: ["オンラインゲーム", "オークション", "スポーツベッティング"]
      
    low_latency:
      target: "3-10秒"
      protocol: ["LL-HLS", "LL-DASH"]
      buffer_size: "2秒"
      segment_duration: "2秒"
      use_cases: ["一般的なライブ配信", "Q&Aセッション"]
      
    standard_latency:
      target: "10-30秒"
      protocol: ["HLS", "DASH"]
      buffer_size: "10秒"
      segment_duration: "6秒"
      use_cases: ["大規模配信", "安定性重視"]
    
    latency_calculation:
      formula: |
        total_latency = encoding_delay + network_delay + cdn_delay + player_buffer
        
        encoding_delay = frame_buffer + encode_time
        network_delay = upload_time + propagation
        cdn_delay = edge_cache + segment_duration
        player_buffer = buffer_size + decode_time
  
  # ビットレート最適化
  bitrate_ladder:
    abr_profiles:
      4k_premium:
        resolutions:
          - { res: "3840x2160", bitrate: "25000-35000", fps: 60 }
          - { res: "2560x1440", bitrate: "10000-15000", fps: 60 }
          - { res: "1920x1080", bitrate: "6000-9000", fps: 60 }
          - { res: "1280x720", bitrate: "3000-4500", fps: 60 }
          - { res: "854x480", bitrate: "1500-2000", fps: 30 }
          - { res: "640x360", bitrate: "800-1200", fps: 30 }
      
      1080p_standard:
        resolutions:
          - { res: "1920x1080", bitrate: "4500-6000", fps: 30 }
          - { res: "1280x720", bitrate: "2500-3500", fps: 30 }
          - { res: "854x480", bitrate: "1200-1800", fps: 30 }
          - { res: "640x360", bitrate: "600-900", fps: 30 }
          - { res: "426x240", bitrate: "300-500", fps: 30 }
      
      mobile_optimized:
        resolutions:
          - { res: "1280x720", bitrate: "2000-3000", fps: 30 }
          - { res: "854x480", bitrate: "1000-1500", fps: 30 }
          - { res: "640x360", bitrate: "500-800", fps: 30 }
          - { res: "426x240", bitrate: "250-400", fps: 30 }
    
    bitrate_calculation:
      formula: |
        bitrate = width * height * fps * motion_factor * compression_efficiency
        
        motion_factors:
          static_content: 0.05  # プレゼンテーション
          low_motion: 0.10     # トークショー
          medium_motion: 0.15  # 一般的な動画
          high_motion: 0.25    # スポーツ、アクション
        
        compression_efficiency:
          h264: 1.0
          h265: 0.5
          av1: 0.3
  
  # 音声品質管理
  audio_quality:
    profiles:
      music_grade:
        codec: "AAC-LC"
        bitrate: "320kbps"
        sample_rate: "48kHz"
        channels: "stereo"
        
      broadcast_grade:
        codec: "AAC-LC"
        bitrate: "192kbps"
        sample_rate: "48kHz"
        channels: "stereo"
        
      voice_optimized:
        codec: "Opus"
        bitrate: "128kbps"
        sample_rate: "48kHz"
        channels: "mono/stereo"
    
    synchronization:
      max_av_sync_drift: "40ms"
      correction_threshold: "20ms"
      lip_sync_tolerance: "±80ms"

platform_integration:
  # マルチプラットフォーム配信
  simultaneous_streaming:
    platforms:
      youtube_live:
        rtmp_url: "rtmp://a.rtmp.youtube.com/live2/"
        max_bitrate: "51000kbps"
        max_resolution: "4K60fps"
        features: ["超低遅延", "DVR", "自動字幕"]
        
      twitch:
        rtmp_url: "rtmp://live.twitch.tv/live/"
        max_bitrate: "6000kbps"
        max_resolution: "1080p60fps"
        features: ["低遅延", "Raids", "Clips"]
        
      facebook_live:
        rtmp_url: "rtmps://live-api-s.facebook.com:443/rtmp/"
        max_bitrate: "4000kbps"
        max_resolution: "1080p30fps"
        features: ["ライブショッピング", "Stars"]
    
    bandwidth_calculation:
      formula: |
        total_upload = sum(platform_bitrates) * 1.2  # 20%のオーバーヘッド
        
        recommended_upload = total_upload * 2  # 2倍の余裕を推奨
        
        # 例: YouTube(9Mbps) + Twitch(6Mbps) + Facebook(4Mbps)
        # = 19Mbps * 1.2 * 2 = 45.6Mbps推奨
  
  # CDN最適化
  cdn_configuration:
    edge_server_selection:
      geo_routing: "最寄りのPOP"
      load_balancing: "ラウンドロビン + ヘルスチェック"
      failover: "自動切り替え（< 3秒）"
    
    cache_strategy:
      segment_cache_time: "60秒"
      manifest_cache_time: "2秒"
      
    scaling_strategy:
      viewers_per_edge: 10000
      auto_scale_threshold: "80%使用率"
      scale_out_time: "< 60秒"

interaction_features:
  # リアルタイムインタラクション
  chat_system:
    message_rate_limits:
      viewer: "1メッセージ/秒"
      subscriber: "3メッセージ/秒"
      moderator: "無制限"
    
    moderation:
      auto_mod_levels: ["低", "中", "高", "カスタム"]
      banned_words: "カスタムリスト + AI検出"
      slow_mode: "5秒 - 120秒"
    
    scaling:
      formula: |
        chat_servers = ceil(concurrent_viewers / 50000)
        moderators_needed = ceil(messages_per_minute / 1000)
  
  # 投げ銭・収益化
  monetization:
    super_chat:
      min_amount: 100
      max_amount: 50000
      currency: "JPY"
      platform_fee: "30%"
      
    subscription_tiers:
      tier1: { price: 500, perks: ["バッジ", "エモート"] }
      tier2: { price: 1000, perks: ["tier1 + 追加エモート"] }
      tier3: { price: 2500, perks: ["tier2 + 専用チャンネル"] }
    
    revenue_calculation:
      formula: |
        gross_revenue = super_chats + subscriptions + ads
        platform_fees = gross_revenue * 0.3
        payment_fees = gross_revenue * 0.029 + 30  # Stripe標準
        net_revenue = gross_revenue - platform_fees - payment_fees

reliability_monitoring:
  # 配信品質監視
  quality_metrics:
    video_metrics:
      - "フレームドロップ率 < 0.1%"
      - "ビットレート安定性 > 95%"
      - "キーフレーム間隔: 2秒"
      
    audio_metrics:
      - "音声ドロップアウト < 0.01%"
      - "音量レベル: -23 LUFS ± 2"
      - "ピーク: -3 dBFS以下"
    
    network_metrics:
      - "パケットロス < 0.1%"
      - "ジッター < 30ms"
      - "RTT < 150ms"
  
  # 冗長性設計
  redundancy_setup:
    encoder_redundancy:
      primary: "メインエンコーダー"
      backup: "ホットスタンバイ"
      switchover_time: "< 3秒"
      
    network_redundancy:
      primary_isp: "専用回線 100Mbps"
      backup_isp: "別キャリア 100Mbps"
      cellular_backup: "5G/4G モバイル"
      
    stream_redundancy:
      main_stream: "プライマリRTMP"
      backup_stream: "セカンダリRTMP"
      sync_mechanism: "タイムコード同期"
  
  # アラート設定
  alert_thresholds:
    critical:
      - "配信停止"
      - "フレームドロップ > 5%"
      - "ビットレート < 50%"
      - "音声なし > 3秒"
      
    warning:
      - "フレームドロップ > 1%"
      - "ビットレート変動 > 20%"
      - "CPU使用率 > 80%"
      - "視聴者離脱率 > 10%/分"

advanced_features:
  # マルチカメラ配信
  multi_camera:
    switching_modes:
      manual: "ディレクター操作"
      auto: "AI顔認識 + 音声検出"
      preset: "事前プログラム"
      
    camera_sync:
      genlock: "必須（放送品質）"
      timecode: "SMPTE 12M"
      frame_accuracy: "±1フレーム"
    
    switching_effects:
      cut: "0フレーム"
      dissolve: "15-30フレーム"
      wipe: "30-60フレーム"
      pip: "カスタムレイアウト"
  
  # 録画・アーカイブ
  recording:
    quality_settings:
      master: "オリジナル品質 + 10%"
      archive: "最高配信品質"
      backup: "1080p30 標準"
      
    storage_calculation:
      formula: |
        storage_gb = (bitrate_mbps / 8) * duration_seconds / 1000
        
        # 4時間配信の例:
        # 9Mbps: (9/8) * 14400 / 1000 = 16.2GB
        # + 音声: 0.2GB
        # + メタデータ: 0.1GB
        # 合計: 約17GB
    
    post_processing:
      auto_chapters: "シーン検出 + メタデータ"
      highlight_clips: "視聴者反応 + AI分析"
      transcription: "自動文字起こし"
  
  # 配信自動化
  automation:
    scheduled_streams:
      pre_roll: "カウントダウン + BGM"
      main_content: "自動開始"
      post_roll: "終了画面 + 次回予告"
      
    scene_automation:
      triggers: ["時間", "寄付", "フォロワー数", "キーワード"]
      actions: ["シーン切替", "効果音", "アニメーション"]
      
    emergency_protocols:
      technical_difficulties:
        - "待機画面自動切替"
        - "BGM自動再生"
        - "チャット通知"
        - "録画バックアップ継続"