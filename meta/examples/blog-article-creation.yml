name: "Blog Article Creation Workflow"
run-name: "📝 Creating blog article: ${{ github.event.inputs.keywords || 'Blog Article Creation' }}"

on:
  workflow_dispatch:
    inputs:
      keywords:
        description: 'メインキーワード・テーマ'
        required: true
        default: 'WordPress SEO対策、リモートワーク生産性向上、Python初心者学習'
        type: string
      article_type:
        description: '記事の種類・スタイル'
        required: true
        type: choice
        options:
        - how_to_guide
        - list_article
        - case_study
        - opinion_editorial
        - news_analysis
        - review_comparison
        default: 'how_to_guide'
      target_audience:
        description: 'ターゲット読者'
        required: true
        type: choice
        options:
        - beginners
        - intermediate
        - advanced
        - business_professionals
        - general_public
        default: 'intermediate'
      content_length:
        description: '記事の長さ'
        required: true
        type: choice
        options:
        - short
        - medium
        - long
        - comprehensive
        default: 'medium'
      seo_focus:
        description: 'SEO最適化レベル (1-10)'
        required: true
        default: '7'
        type: choice
        options:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'

permissions:
  contents: write
  issues: read
  actions: read

env:
  CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

jobs:
  # Phase 1: キーワード分析
  keyword-analysis:
    runs-on: ubuntu-latest
    outputs:
      analysis_ready: ${{ steps.analyze.outputs.analysis_ready }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Analyze keywords and SEO strategy
        id: analyze
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "🔍 Analyzing keywords and SEO strategy..."
          
          mkdir -p .logs/keyword-analysis
          
          KEYWORDS="${{ github.event.inputs.keywords }}"
          SEO_FOCUS="${{ github.event.inputs.seo_focus }}"
          
          claude-code --prompt "以下のキーワードを基に、SEO戦略とキーワード分析を行ってください：
          
          キーワード: $KEYWORDS
          SEO重点度: $SEO_FOCUS/10
          
          JSON形式でキーワード分析結果を返してください。" > .logs/keyword-analysis/keyword-analysis.json
          
          echo "analysis_ready=true" >> $GITHUB_OUTPUT
          echo "🔍 Keyword analysis completed"

  # Phase 2: 記事構成設計
  content-structure:
    needs: keyword-analysis
    runs-on: ubuntu-latest
    outputs:
      structure_ready: ${{ steps.structure.outputs.structure_ready }}
    steps:
      - name: Design article structure
        id: structure
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "📋 Designing article structure..."
          
          mkdir -p .logs/content-structure
          
          ARTICLE_TYPE="${{ github.event.inputs.article_type }}"
          TARGET_AUDIENCE="${{ github.event.inputs.target_audience }}"
          CONTENT_LENGTH="${{ github.event.inputs.content_length }}"
          
          claude-code --prompt "以下の条件で記事構成を設計してください：
          
          記事タイプ: $ARTICLE_TYPE
          ターゲット: $TARGET_AUDIENCE
          記事の長さ: $CONTENT_LENGTH
          
          JSON形式で記事構成を返してください。" > .logs/content-structure/article-structure.json
          
          echo "structure_ready=true" >> $GITHUB_OUTPUT
          echo "📋 Article structure design completed"

  # Phase 3: コンテンツ生成
  content-generation:
    needs: [keyword-analysis, content-structure]
    runs-on: ubuntu-latest
    outputs:
      content_ready: ${{ steps.generate.outputs.content_ready }}
    steps:
      - name: Generate article content
        id: generate
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "✍️ Generating article content..."
          
          mkdir -p .logs/content-generation
          
          KEYWORDS="${{ github.event.inputs.keywords }}"
          ARTICLE_TYPE="${{ github.event.inputs.article_type }}"
          TARGET_AUDIENCE="${{ github.event.inputs.target_audience }}"
          
          claude-code --prompt "以下の条件でブログ記事を生成してください：
          
          キーワード: $KEYWORDS
          記事タイプ: $ARTICLE_TYPE
          ターゲット読者: $TARGET_AUDIENCE
          
          完全なブログ記事をMarkdown形式で生成してください。" > .logs/content-generation/article-content.md
          
          echo "content_ready=true" >> $GITHUB_OUTPUT
          echo "✍️ Article content generation completed"

  # Phase 4: SEO最適化
  seo-optimization:
    needs: content-generation
    runs-on: ubuntu-latest
    outputs:
      seo_ready: ${{ steps.optimize.outputs.seo_ready }}
    steps:
      - name: Optimize for SEO
        id: optimize
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "🚀 Optimizing for SEO..."
          
          mkdir -p .logs/seo-optimization
          
          SEO_FOCUS="${{ github.event.inputs.seo_focus }}"
          
          claude-code --prompt "生成された記事をSEO最適化してください。
          
          SEO重点度: $SEO_FOCUS/10
          
          JSON形式でSEO最適化レポートを返してください。" > .logs/seo-optimization/seo-report.json
          
          echo "seo_ready=true" >> $GITHUB_OUTPUT
          echo "🚀 SEO optimization completed"

  # Phase 5: 最終パッケージ作成
  final-packaging:
    needs: [keyword-analysis, content-structure, content-generation, seo-optimization]
    runs-on: ubuntu-latest
    steps:
      - name: Create blog article package
        run: |
          echo "📦 Creating blog article package..."
          
          mkdir -p .final-output/{analysis,content,seo}
          
          # プロジェクト文書
          cp .logs/keyword-analysis/keyword-analysis.json .final-output/analysis/ 2>/dev/null || true
          cp .logs/content-structure/article-structure.json .final-output/analysis/ 2>/dev/null || true
          
          # コンテンツ成果物
          cp .logs/content-generation/article-content.md .final-output/content/ 2>/dev/null || true
          cp .logs/seo-optimization/seo-report.json .final-output/seo/ 2>/dev/null || true
          
          # マスタープロジェクト情報
          cat > .final-output/blog-project-master.json << EOF
          {
            "project_info": {
              "project_name": "Blog Article Creation",
              "created_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "github_run_id": "${{ github.run_id }}",
              "project_type": "seo_optimized_blog_article"
            },
            "input_parameters": {
              "keywords": "${{ github.event.inputs.keywords }}",
              "article_type": "${{ github.event.inputs.article_type }}",
              "target_audience": "${{ github.event.inputs.target_audience }}",
              "content_length": "${{ github.event.inputs.content_length }}",
              "seo_focus": ${{ github.event.inputs.seo_focus }}
            },
            "deliverables": {
              "analysis": {
                "keyword_analysis": "analysis/keyword-analysis.json",
                "article_structure": "analysis/article-structure.json"
              },
              "content": {
                "blog_article": "content/article-content.md"
              },
              "seo": {
                "seo_report": "seo/seo-report.json"
              }
            }
          }
          EOF
          
          echo "📦 Blog article package created"
          
      - name: Upload Blog Article Package
        uses: actions/upload-artifact@v4
        with:
          name: blog-article-package-${{ github.run_number }}
          path: .final-output/
          retention-days: 30