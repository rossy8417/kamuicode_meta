name: "Presentation Slide Creation Workflow"
run-name: "📊 Creating presentation: ${{ github.event.inputs.presentation_topic || 'Business Presentation' }}"

on:
  workflow_dispatch:
    inputs:
      presentation_topic:
        description: 'プレゼンテーションのテーマ・題材'
        required: true
        default: '新商品マーケティング戦略、四半期業績報告、プロジェクト提案'
        type: string
      target_audience:
        description: '対象聴衆'
        required: true
        type: choice
        options:
        - executives
        - management
        - colleagues
        - clients
        - general
        default: 'management'
      presentation_time:
        description: '発表予定時間'
        required: true
        type: choice
        options:
        - 5-minutes
        - 10-minutes
        - 15-minutes
        - 30-minutes
        - 45-minutes
        - 60-minutes
        default: '15-minutes'
      slide_count:
        description: '希望スライド数 (5-50)'
        required: true
        default: '15'
        type: choice
        options:
        - '5'
        - '10'
        - '15'
        - '20'
        - '25'
        - '30'
        - '35'
        - '40'
        - '45'
        - '50'
      content_type:
        description: 'プレゼンテーションの種類'
        required: true
        type: choice
        options:
        - proposal
        - report
        - analysis
        - training
        - sales
        - strategy
        default: 'proposal'
      data_visualization_needs:
        description: 'データ可視化の必要性'
        required: true
        type: choice
        options:
        - heavy
        - moderate
        - minimal
        default: 'moderate'
      presentation_style:
        description: 'プレゼンテーションスタイル'
        required: true
        type: choice
        options:
        - corporate
        - modern
        - creative
        - minimalist
        - technical
        default: 'corporate'
      color_preference:
        description: 'カラーテーマ（任意）'
        required: false
        type: choice
        options:
        - blue
        - green
        - red
        - purple
        - neutral
        - brand
        default: 'blue'
      purpose:
        description: 'プレゼンテーションの目的（任意）'
        required: false
        default: '新商品の承認を得る、チームの意識統一を図る、投資家への説得'
        type: string

permissions:
  contents: write
  issues: read
  actions: read

env:
  CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

jobs:
  # Phase 1: 事前テスト段階
  connectivity-test:
    runs-on: ubuntu-latest
    outputs:
      services_ready: ${{ steps.test.outputs.services_ready }}
      image_generation_available: ${{ steps.test.outputs.image_generation_available }}
    steps:
      - name: Test design and generation services
        id: test
        run: |
          echo "📊 Testing design and generation services..."
          
          mkdir -p generated/logs/connectivity-tests
          
          # Test Claude Code for presentation content generation
          echo "Testing presentation content generation..."
          if timeout 30 claude-code --prompt "Test: Create a simple slide title for testing." > generated/logs/connectivity-tests/content-test.log 2>&1; then
            CONTENT_GEN_STATUS="success"
            echo "✅ Content Generation: Available"
          else
            CONTENT_GEN_STATUS="failed"
            echo "❌ Content Generation: Failed"
          fi
          
          # Test image generation services for slide backgrounds
          echo "Testing image generation for slide backgrounds..."
          if timeout 90 claude-code --mcp-config=.claude/mcp-kamuicode.json --mcp t2i-fal-imagen4-fast --prompt "professional business presentation background, corporate style" > generated/logs/connectivity-tests/image-test.log 2>&1; then
            IMAGE_GEN_STATUS="success"
            echo "✅ Image Generation: Available"
          else
            IMAGE_GEN_STATUS="failed"
            echo "⚠️ Image Generation: Not available - will use text-only slides"
          fi
          
          # Set outputs
          echo "services_ready=true" >> $GITHUB_OUTPUT
          echo "image_generation_available=$IMAGE_GEN_STATUS" >> $GITHUB_OUTPUT
          
          echo "📊 Design services connectivity tests completed"

  # Phase 2: プレゼンテーション分析段階
  presentation-analysis:
    needs: connectivity-test
    runs-on: ubuntu-latest
    outputs:
      analysis_ready: ${{ steps.analyze.outputs.analysis_ready }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Analyze presentation requirements
        id: analyze
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "🔍 Analyzing presentation requirements..."
          
          mkdir -p generated/logs/presentation-analysis
          
          # Analyze presentation parameters
          TOPIC="${{ github.event.inputs.presentation_topic }}"
          AUDIENCE="${{ github.event.inputs.target_audience }}"
          TIME="${{ github.event.inputs.presentation_time }}"
          STYLE="${{ github.event.inputs.presentation_style }}"
          
          echo "Topic: $TOPIC"
          echo "Audience: $AUDIENCE"
          echo "Time: $TIME"
          echo "Style: $STYLE"
          
          # Generate presentation analysis
          claude-code --prompt "以下のプレゼンテーション要件を分析し、構成と内容の提案をJSON形式で作成してください：
          
          テーマ: $TOPIC
          対象聴衆: $AUDIENCE
          時間: $TIME
          スタイル: $STYLE
          スライド数: ${{ github.event.inputs.slide_count }}
          内容タイプ: ${{ github.event.inputs.content_type }}
          
          プレゼンテーション設計と各スライドの構成を提案してください。" > generated/logs/presentation-analysis/requirements-analysis.json
          
          echo "analysis_ready=true" >> $GITHUB_OUTPUT
          echo "🔍 Presentation analysis completed"

  # Phase 3: スライド構成段階
  slide-structure:
    needs: presentation-analysis
    runs-on: ubuntu-latest
    outputs:
      structure_ready: ${{ steps.structure.outputs.structure_ready }}
    steps:
      - name: Create slide structure and content
        id: structure
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "📋 Creating slide structure and content..."
          
          mkdir -p generated/logs/slide-structure
          
          # Generate slide-by-slide content
          claude-code --prompt "前段階の分析結果を基に、具体的なスライド内容を作成してください：
          
          プレゼンテーション情報:
          - テーマ: ${{ github.event.inputs.presentation_topic }}
          - 対象聴衆: ${{ github.event.inputs.target_audience }}
          - スライド数: ${{ github.event.inputs.slide_count }}
          - 可視化レベル: ${{ github.event.inputs.data_visualization_needs }}
          
          各スライドのタイトル、内容、レイアウトをJSON形式で作成してください。" > generated/logs/slide-structure/slide-content.json
          
          echo "structure_ready=true" >> $GITHUB_OUTPUT
          echo "📋 Slide structure creation completed"

  # Phase 4: ビジュアルデザイン段階
  visual-design:
    needs: [connectivity-test, slide-structure]
    runs-on: ubuntu-latest
    outputs:
      design_ready: ${{ steps.design.outputs.design_ready }}
    steps:
      - name: Generate visual elements and backgrounds
        id: design
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "🎨 Generating visual elements and backgrounds..."
          
          mkdir -p generated/logs/visual-design
          
          IMAGE_GEN_AVAILABLE="${{ needs.connectivity-test.outputs.image_generation_available }}"
          
          if [ "$IMAGE_GEN_AVAILABLE" = "success" ]; then
            echo "Generating slide background..."
            STYLE_PROMPT="${{ github.event.inputs.presentation_style }} style, ${{ github.event.inputs.color_preference }} color scheme, professional presentation background"
            
            claude-code --mcp-config=.claude/mcp-kamuicode.json --mcp t2i-fal-imagen4-fast --prompt "$STYLE_PROMPT" > generated/logs/visual-design/background.json 2>&1 || echo "Background generation failed"
          else
            echo "⚠️ Image generation not available - using text-based design"
            echo '{"design_type": "text_only", "color_scheme": "${{ github.event.inputs.color_preference }}"}' > generated/logs/visual-design/design-plan.json
          fi
          
          echo "design_ready=true" >> $GITHUB_OUTPUT
          echo "🎨 Visual design generation completed"

  # Phase 5: 最終パッケージ作成
  final-packaging:
    needs: [presentation-analysis, slide-structure, visual-design]
    runs-on: ubuntu-latest
    steps:
      - name: Create comprehensive presentation package
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "📦 Creating comprehensive presentation package..."
          
          mkdir -p .final-output/{analysis,content,design}
          
          # Copy analysis documents
          cp generated/logs/presentation-analysis/requirements-analysis.json .final-output/analysis/ 2>/dev/null || true
          
          # Copy slide content
          cp generated/logs/slide-structure/slide-content.json .final-output/content/ 2>/dev/null || true
          
          # Copy design elements
          cp generated/logs/visual-design/*.json .final-output/design/ 2>/dev/null || true
          
          # Create master presentation information
          cat > .final-output/presentation-master.json << EOF
          {
            "project_info": {
              "project_name": "Business Presentation Creation",
              "created_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "github_run_id": "${{ github.run_id }}",
              "presentation_type": "business_slide_creation"
            },
            "input_parameters": {
              "presentation_topic": "${{ github.event.inputs.presentation_topic }}",
              "target_audience": "${{ github.event.inputs.target_audience }}",
              "presentation_time": "${{ github.event.inputs.presentation_time }}",
              "slide_count": "${{ github.event.inputs.slide_count }}",
              "content_type": "${{ github.event.inputs.content_type }}",
              "data_visualization_needs": "${{ github.event.inputs.data_visualization_needs }}",
              "presentation_style": "${{ github.event.inputs.presentation_style }}",
              "color_preference": "${{ github.event.inputs.color_preference }}",
              "purpose": "${{ github.event.inputs.purpose }}"
            },
            "deliverables": {
              "analysis_documents": {
                "requirements_analysis": "analysis/requirements-analysis.json"
              },
              "presentation_content": {
                "slide_content": "content/slide-content.json"
              },
              "design_elements": {
                "visual_design": "design/"
              }
            }
          }
          EOF
          
          # Create presentation creation guide
          cat > .final-output/PRESENTATION_GUIDE.md << 'EOF'
          # プレゼンテーションスライド制作ガイド
          
          ## 📊 プレゼンテーション概要
          - 制作手法: AI分析による構造的スライド制作
          - 品質レベル: ビジネスプロフェッショナル対応
          - カスタマイズ: 聴衆・目的別最適化
          
          ## 🎯 構成設計
          - テーマ分析と対象聴衆マッピング
          - 論理的な流れとストーリー構築
          - 時間配分と情報密度最適化
          
          ## 🎨 デザイン要素
          - スタイル統一とブランド整合性
          - 視覚的階層とレイアウト設計
          - カラーパレットと可読性確保
          
          ## 📈 効果的なプレゼンテーション
          - 聴衆エンゲージメント向上
          - メッセージ明確化と記憶定着
          - アクション誘導とフォローアップ
          EOF
          
          echo "📦 Final presentation packaging completed"
          
      - name: Upload Presentation Package
        uses: actions/upload-artifact@v4
        with:
          name: presentation-package-${{ github.run_number }}
          path: .final-output/
          retention-days: 30
